{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Login.js\";\nimport React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamName: '',\n      passCode: ''\n    };\n    this.checkTeam = this.checkTeam.bind(this);\n    this.saveChallengeData = this.saveChallengeData.bind(this);\n  }\n\n  handleTeam(event) {\n    this.setState({\n      teamName: event.target.value\n    });\n  }\n\n  handlePassCode(event) {\n    this.setState({\n      passCode: event.target.value\n    });\n  }\n\n  checkTeam() {}\n\n  saveChallengeData() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headerBackground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Break the ENGIMA\"), React.createElement(\"div\", {\n      className: \"quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"\\u201CThose who can imagine anything, can create the impossible.\\u201D \\u2015 Alan Turing\")), React.createElement(\"div\", {\n      className: \"registerForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"teamName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Enter Team Name\"), React.createElement(\"div\", {\n      className: \"teamNameDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"teamID\",\n      placeholder: \"Enter team name\",\n      type: \"text\",\n      className: \"teamNameInput\",\n      onChange: this.handleTeamChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), this.state.toShowTeamMessage ? React.createElement(\"div\", {\n      className: \"teamAvailableMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.teamAvailableMessage) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), this.state.isTeamNameAvailable === false ? React.createElement(\"div\", {\n      className: \"submitDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"submitButton\",\n      onClick: this.checkTeamAvailable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Check Validity\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), this.state.toShowLoader ? React.createElement(\"div\", {\n      className: \"loaderDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"Bars\",\n      color: \"#00BFFF\",\n      height: 100,\n      width: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Login.js"],"names":["React","Loader","Login","Component","constructor","props","state","teamName","passCode","checkTeam","bind","saveChallengeData","handleTeam","event","setState","target","value","handlePassCode","render","handleTeamChange","toShowTeamMessage","teamAvailableMessage","isTeamNameAvailable","checkTeamAvailable","toShowLoader"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamName:'',\n      passCode:''\n    };\n    this.checkTeam = this.checkTeam.bind(this);\n    this.saveChallengeData = this.saveChallengeData.bind(this);\n}\n\nhandleTeam(event){\n    this.setState({teamName:event.target.value});\n}\n\nhandlePassCode(event){\n    this.setState({passCode:event.target.value});\n}\n\ncheckTeam(){\n  \n}\n\nsaveChallengeData(){\n    \n}\n\nrender() {\n  return (\n    <div className=\"header\">\n        <div className=\"headerBackground\">\n        <div className=\"heading\">Break the ENGIMA</div>\n        <div className=\"quote\">“Those who can imagine anything, can create the impossible.”\n            ― Alan Turing</div>\n        </div>\n        <div className=\"registerForm\">\n            <div className=\"teamName\">Enter Team Name</div>\n            <div className=\"teamNameDiv\">\n              <input id=\"teamID\" placeholder=\"Enter team name\" type=\"text\" className=\"teamNameInput\" onChange={this.handleTeamChange}/>\n              {this.state.toShowTeamMessage?<div className=\"teamAvailableMessage\">{this.state.teamAvailableMessage}</div>\n              :<div></div>}</div>\n            {this.state.isTeamNameAvailable === false?<div className=\"submitDiv\"><div className=\"submitButton\" onClick={this.checkTeamAvailable}>Check Validity</div></div>:<div></div>}\n        </div>\n        {this.state.toShowLoader?<div className=\"loaderDiv\"><Loader\n         type=\"Bars\"\n         color=\"#00BFFF\"\n         height={100}\n         width={100}\n         /></div>:<div></div>}\n    </div>\n  );\n}\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}