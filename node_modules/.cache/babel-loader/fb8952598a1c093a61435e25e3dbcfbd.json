{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Question.js\";\nimport React from 'react';\nimport './Register.css';\nimport cookie from 'react-cookies';\nimport Timer from 'react-compound-timer';\nimport Puzzle from './Puzzle.js';\n\nvar hackerEarth = require('hackerearth-node'); //require the Library\n//Now set your application \n\n\nvar hackerEarth = new hackerEarth('f3c1455800df92db6737d087ac0c93424bbe1e40', //Your Client Secret Key here this is mandatory\n1 //mode sync=1 or async(optional)=0 or null async is by default and preferred for nodeJS\n);\nvar config = {};\nconfig.time_limit = 1; //your time limit in integer\n\nconfig.memory_limit = 323244; //your memory limit in integer\n\nconfig.source = 'print(\"Hello\")'; //your source code for which you want to use hackerEarth api\n\nconfig.input = \"\"; //input against which you have to test your source code\n\nconfig.language = \"Py\"; //optional choose any one of them or none\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: ''\n    };\n    this.compileCode = this.compileCode.bind(this);\n    this.onEndTest = this.onEndTest.bind(this);\n  }\n\n  componentDidMount() {}\n\n  compileCode() {\n    hackerEarth.compile(config).then(result => {\n      console.log(result);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onEndTest() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"challengeHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"challengeHeaderMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Break the ENGIMA\"), React.createElement(\"div\", {\n      className: \"challengeTimer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      initialTime: 600 * 60 * 48 + 5000,\n      direction: \"backward\",\n      checkpoints: [{\n        time: 0,\n        callback: () => console.log('Checkpoint A')\n      }, {\n        time: 600 * 60,\n        callback: () => console.log('Checkpoint B')\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, () => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Timer.Hours, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \" :\", React.createElement(Timer.Minutes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \" :\", React.createElement(Timer.Seconds, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"endTestButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"End Test\")), React.createElement(\"div\", {\n      className: \"challengeBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Puzzle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Question.js"],"names":["React","cookie","Timer","Puzzle","hackerEarth","require","config","time_limit","memory_limit","source","input","language","Question","Component","constructor","props","state","code","compileCode","bind","onEndTest","componentDidMount","compile","then","result","console","log","catch","err","render","time","callback"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Register.css';\nimport cookie from 'react-cookies';\nimport Timer from 'react-compound-timer';\nimport Puzzle from './Puzzle.js';\n  \nvar hackerEarth=require('hackerearth-node'); //require the Library\n//Now set your application \nvar hackerEarth=new hackerEarth(\n        'f3c1455800df92db6737d087ac0c93424bbe1e40',  //Your Client Secret Key here this is mandatory\n        1  //mode sync=1 or async(optional)=0 or null async is by default and preferred for nodeJS\n);\nvar config={};\nconfig.time_limit=1;  //your time limit in integer\nconfig.memory_limit=323244;  //your memory limit in integer\nconfig.source='print(\"Hello\")';  //your source code for which you want to use hackerEarth api\nconfig.input=\"\";  //input against which you have to test your source code\nconfig.language=\"Py\"; //optional choose any one of them or none\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        code:''\n    };\n    this.compileCode = this.compileCode.bind(this);\n    this.onEndTest = this.onEndTest.bind(this);\n}\n\ncomponentDidMount(){\n\n}\n\ncompileCode(){\n    hackerEarth.compile(config)\n                        .then(result => {\n                          console.log(result);\n                        })\n                        .catch(err => {\n                            console.log(err);\n                        });\n}\n\nonEndTest(){\n\n}\n\nrender() {\n  return (\n    <div className=\"\">\n        <div className=\"challengeHeader\">\n            <div className=\"challengeHeaderMessage\">Break the ENGIMA</div>\n            <div className=\"challengeTimer\"><Timer\n            initialTime={600 * 60 * 48 + 5000}\n            direction=\"backward\"\n            checkpoints={[\n            {\n            time: 0,\n            callback: () => console.log('Checkpoint A'),\n            },\n            {\n            time: 600 * 60,\n            callback: () => console.log('Checkpoint B'),\n            }\n            ]}>\n            {() => (\n            <React.Fragment>\n            <Timer.Hours /> :\n            <Timer.Minutes /> :\n            <Timer.Seconds />\n            </React.Fragment>\n            )}\n             </Timer></div>\n            <div className=\"endTestButton\">End Test</div>\n        </div>\n        <div className=\"challengeBody\">\n            <Puzzle/>\n        </div>\n    </div>\n  );\n}\n}\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}