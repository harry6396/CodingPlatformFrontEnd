{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Puzzle.js\";\nimport React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner';\nimport cookie from 'react-cookies';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      puzzleStatement: '',\n      puzzleDescription: '',\n      answer: '',\n      toShowLoader: false,\n      questionType: ''\n    };\n    this.onPuzzleAnswerButtonClick = this.onPuzzleAnswerButtonClick.bind(this);\n    this.inputPuzzle = this.inputPuzzle.bind(this);\n  }\n\n  inputPuzzle(event) {\n    this.setState({\n      answer: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    var teamName = cookie.load('teamName');\n\n    if (teamName !== null && teamName !== undefined && teamName !== \"\") {\n      fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\", {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          \"teamName\": teamName\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.status === \"Success\") {\n          this.setState({\n            puzzleStatement: result.puzzleStatement,\n            puzzleDescription: result.puzzleDescription,\n            questionType: result.questionType\n          });\n        } else if (result.status === \"Fail\") {\n          alert(\"Something went wrong\");\n        }\n      });\n    } else {\n      this.props.history.push('/login');\n    }\n  }\n\n  onPuzzleAnswerButtonClick() {\n    var teamName = cookie.load('teamName');\n\n    if (this.state.answer === \"\" || this.state.answer === undefined || this.state.answer === null) {\n      alert(\"Please fill answer\");\n    } else {\n      fetch(\"https://codingtestplatform.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\", {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          \"teamName\": teamName,\n          \"answer\": this.state.answer,\n          \"questionType\": this.state.questionType\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.status === \"Success\") {\n          this.props.toggleQuestion();\n        } else if (result.status === \"Fail\") {\n          alert(\"Answer is wrong\");\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"puzzleStatement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.puzzleStatement), React.createElement(\"div\", {\n      className: \"puzzleDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.puzzleDescription), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"puzzleInput\",\n      type: \"text\",\n      placeholder: \"Answer\",\n      onChange: this.inputPuzzle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"puzzleAnswerButton\",\n      onClick: this.onPuzzleAnswerButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Puzzle;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Puzzle.js"],"names":["React","Loader","cookie","Puzzle","Component","constructor","props","state","puzzleStatement","puzzleDescription","answer","toShowLoader","questionType","onPuzzleAnswerButtonClick","bind","inputPuzzle","event","setState","target","value","componentDidMount","teamName","load","undefined","fetch","headers","method","body","JSON","stringify","then","res","json","result","status","alert","history","push","toggleQuestion","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner';\nimport cookie from 'react-cookies';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      puzzleStatement:'',\n      puzzleDescription:'',\n      answer:'',\n      toShowLoader:false,\n      questionType:''\n    };\n    this.onPuzzleAnswerButtonClick = this.onPuzzleAnswerButtonClick.bind(this);\n    this.inputPuzzle = this.inputPuzzle.bind(this);\n}\ninputPuzzle(event){\n  this.setState({answer:event.target.value});\n}\ncomponentDidMount(){\n  var teamName=cookie.load('teamName');\n  if(teamName!==null&&teamName!==undefined&&teamName!==\"\"){\n  fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\",{\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: \"POST\",\n          body: JSON.stringify({\"teamName\":teamName})\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n              if(result.status === \"Success\"){\n                this.setState({puzzleStatement:result.puzzleStatement,puzzleDescription:result.puzzleDescription,questionType:result.questionType});\n              }else if(result.status === \"Fail\"){\n                  alert(\"Something went wrong\");\n              }\n            }\n    )\n  }else{\n    this.props.history.push('/login');\n  }\n}\nonPuzzleAnswerButtonClick(){\n  var teamName=cookie.load('teamName');\n  if(this.state.answer===\"\"||this.state.answer===undefined||this.state.answer===null){\n    alert(\"Please fill answer\");\n  }else{\n  fetch(\"https://codingtestplatform.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\",{\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    method: \"POST\",\n    body: JSON.stringify({\"teamName\":teamName,\"answer\":this.state.answer,\"questionType\":this.state.questionType})\n  })\n    .then(res => res.json())\n    .then(\n      (result) => {\n        if(result.status === \"Success\"){\n          this.props.toggleQuestion();\n        }else if(result.status === \"Fail\"){\n          alert(\"Answer is wrong\");\n        }\n      }\n)\n  }\n}\n\nrender() {\n  return (\n    <div className=\"header\">\n        <div className=\"puzzleStatement\">{this.state.puzzleStatement}</div>\n        <div className=\"puzzleDescription\">{this.state.puzzleDescription}</div>\n        <div className=\"\"><input className=\"puzzleInput\" type=\"text\" placeholder=\"Answer\" onChange={this.inputPuzzle}/></div>\n        <div className=\"puzzleAnswerButton\" onClick={this.onPuzzleAnswerButtonClick}>Submit</div>\n    </div>\n  );\n}\n}\nexport default Puzzle;\n"]},"metadata":{},"sourceType":"module"}