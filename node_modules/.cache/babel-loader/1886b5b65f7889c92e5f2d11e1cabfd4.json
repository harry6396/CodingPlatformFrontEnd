{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Question.js\";\nimport React from 'react';\nimport './Register.css';\nimport cookie from 'react-cookies';\nimport Timer from 'react-compound-timer';\nimport Puzzle from './Puzzle.js';\nimport Code from './Code.js';\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '',\n      isPuzzleCode: false\n    };\n    this.onEndTest = this.onEndTest.bind(this);\n    this.toggleQuestionType = this.toggleQuestionType.bind(this);\n    this.changeCodingQuestion = this.changeCodingQuestion.bind(this);\n  }\n\n  changeCodingQuestion() {\n    var iProblemCounter = cookie.load('challengeQuestionNumber');\n    cookie.save('challengeQuestionNumber', iProblemCounter++, {\n      path: '/'\n    });\n    this.setState({\n      isPuzzleCode: true\n    });\n  }\n\n  componentDidMount() {}\n\n  onEndTest() {}\n\n  toggleQuestionType() {\n    cookie.save('currentQuestionTypeStatus', 'C', {\n      path: '/'\n    });\n    this.setState({\n      isPuzzleCode: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"challengeHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"challengeHeaderMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Break the ENGIMA\"), React.createElement(\"div\", {\n      className: \"challengeTimer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      initialTime: 600 * 60 * 48 + 5000,\n      direction: \"backward\",\n      checkpoints: [{\n        time: 0,\n        callback: () => console.log('Checkpoint A')\n      }, {\n        time: 600 * 60,\n        callback: () => console.log('Checkpoint B')\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, () => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Timer.Hours, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), \" :\", React.createElement(Timer.Minutes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), \" :\", React.createElement(Timer.Seconds, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"endTestButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"End Test\")), React.createElement(\"div\", {\n      className: \"challengeBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.isPuzzleCode === true ? React.createElement(Puzzle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : React.createElement(Code, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Question.js"],"names":["React","cookie","Timer","Puzzle","Code","Question","Component","constructor","props","state","code","isPuzzleCode","onEndTest","bind","toggleQuestionType","changeCodingQuestion","iProblemCounter","load","save","path","setState","componentDidMount","render","time","callback","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Register.css';\nimport cookie from 'react-cookies';\nimport Timer from 'react-compound-timer';\nimport Puzzle from './Puzzle.js';\nimport Code from './Code.js';\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        code:'',\n        isPuzzleCode:false\n    };\n    this.onEndTest = this.onEndTest.bind(this);\n    this.toggleQuestionType = this.toggleQuestionType.bind(this);\n    this.changeCodingQuestion = this.changeCodingQuestion.bind(this);\n}\n\nchangeCodingQuestion(){\n    var iProblemCounter = cookie.load('challengeQuestionNumber');\n    cookie.save('challengeQuestionNumber', iProblemCounter++, {path: '/'} );\n    this.setState({isPuzzleCode: true});\n}\n\ncomponentDidMount(){\n\n}\n\nonEndTest(){\n\n}\n\ntoggleQuestionType(){\n    cookie.save('currentQuestionTypeStatus', 'C', {path: '/'} );\n    this.setState({isPuzzleCode: false});\n}\n\nrender() {\n  return (\n    <div className=\"\">\n        <div className=\"challengeHeader\">\n            <div className=\"challengeHeaderMessage\">Break the ENGIMA</div>\n            <div className=\"challengeTimer\"><Timer\n            initialTime={600 * 60 * 48 + 5000}\n            direction=\"backward\"\n            checkpoints={[\n            {\n            time: 0,\n            callback: () => console.log('Checkpoint A'),\n            },\n            {\n            time: 600 * 60,\n            callback: () => console.log('Checkpoint B'),\n            }\n            ]}>\n            {() => (\n            <React.Fragment>\n            <Timer.Hours /> : \n            <Timer.Minutes /> : \n            <Timer.Seconds />\n            </React.Fragment>\n            )}\n             </Timer></div>\n            <div className=\"endTestButton\">End Test</div>\n        </div>\n        <div className=\"challengeBody\">\n            {this.state.isPuzzleCode===true?\n            <Puzzle\n            \n            />:\n            <Code/>}\n        </div>\n    </div>\n  );\n}\n}\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}