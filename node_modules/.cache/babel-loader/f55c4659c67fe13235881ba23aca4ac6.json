{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Register.js\";\nimport React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTeamNameAvailable: false,\n      teamName: '',\n      candidateName1: '',\n      candidateName2: '',\n      candidatePhoneNumber1: '',\n      candidatePhoneNumber2: '',\n      candidateEmailID1: '',\n      candidateEmailID2: '',\n      toShowLoader: false,\n      toShowBlurBackGround: false,\n      teamAvailableMessage: '',\n      toShowTeamMessage: false\n    };\n    this.checkTeamAvailable = this.checkTeamAvailable.bind(this);\n    this.handleTeamChange = this.handleTeamChange.bind(this);\n    this.handleNameChange1 = this.handleNameChange1.bind(this);\n    this.handleNameChange2 = this.handleNameChange2.bind(this);\n    this.handlePhoneNumberChange1 = this.handlePhoneNumberChange1.bind(this);\n    this.handlePhoneNumberChange2 = this.handlePhoneNumberChange2.bind(this);\n    this.handleEmailIDChange1 = this.handleEmailIDChange1.bind(this);\n    this.handleEmailIDChange2 = this.handleEmailIDChange2.bind(this);\n    this.registerTeam = this.registerTeam.bind(this);\n  }\n\n  handleTeamChange(event) {\n    this.setState({\n      teamName: event.target.value\n    });\n  }\n\n  handleNameChange1(event) {\n    this.setState({\n      candidateName1: event.target.value\n    });\n  }\n\n  handleNameChange2(event) {\n    this.setState({\n      candidateName2: event.target.value\n    });\n  }\n\n  handlePhoneNumberChange1(event) {\n    this.setState({\n      candidatePhoneNumber1: event.target.value\n    });\n  }\n\n  handlePhoneNumberChange2(event) {\n    this.setState({\n      candidatePhoneNumber2: event.target.value\n    });\n  }\n\n  handleEmailIDChange1(event) {\n    this.setState({\n      candidateEmailID1: event.target.value\n    });\n  }\n\n  handleEmailIDChange2(event) {\n    this.setState({\n      candidateEmailID2: event.target.value\n    });\n  }\n\n  registerTeam() {\n    this.setState({\n      toShowLoader: true,\n      toShowBlurBackGround: true\n    });\n    fetch(\"http://localhost:8080/codingPlatform/register?key=SHARED_KEY\", {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify([{\n        \"EmailID\": this.state.candidateEmailID1,\n        \"PhoneNumber\": this.state.candidatePhoneNumber1,\n        \"Name\": this.state.candidateName1,\n        \"TeamName\": this.state.teamName,\n        \"status\": null\n      }, {\n        \"EmailID\": this.state.candidateEmailID2,\n        \"PhoneNumber\": this.state.candidatePhoneNumber1,\n        \"Name\": this.state.candidateName1,\n        \"TeamName\": this.state.teamName,\n        \"status\": null\n      }])\n    }).then(res => res.json()).then(result => {\n      if (result.status === \"Success\") {\n        this.setState({\n          toShowLoader: false,\n          toShowBlurBackGround: false\n        });\n        console.log(\"Registered Successfully\");\n      }\n    });\n  }\n\n  checkTeamAvailable() {\n    this.setState({\n      toShowLoader: true\n    });\n    fetch(\"http://localhost:8080/codingPlatform/checkTeam?key=SHARED_KEY\", {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        \"teamName\": this.state.teamName,\n        \"status\": null\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.status === \"Success\") {\n        this.setState({\n          toShowTeamMessage: true,\n          isTeamNameAvailable: true,\n          toShowLoader: false,\n          teamAvailableMessage: 'Team Name Available'\n        });\n      } else if (result.status === \"Fail\") {\n        this.setState({\n          toShowTeamMessage: true,\n          toShowLoader: false,\n          teamAvailableMessage: 'Team Name Not Available'\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headerBackground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Break the ENGIMA\"), React.createElement(\"div\", {\n      className: \"quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\u201CThose who can imagine anything, can create the impossible.\\u201D \\u2015 Alan Turing\")), React.createElement(\"div\", {\n      className: \"registerForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"teamName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Enter Team Name\"), React.createElement(\"div\", {\n      className: \"teamNameDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Enter team name\",\n      type: \"text\",\n      className: \"teamNameInput\",\n      onChange: this.handleTeamChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), this.state.isTeamNameAvailable ? React.createElement(\"div\", {\n      className: \"teamAvailableMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.teamAvailableMessage) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), this.state.isTeamNameAvailable === false ? React.createElement(\"div\", {\n      className: \"submitDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"submitButton\",\n      onClick: this.checkTeamAvailable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Check Validity\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), this.state.toShowLoader ? React.createElement(\"div\", {\n      className: \"loaderDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"Bars\",\n      color: \"#00BFFF\",\n      height: 100,\n      width: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), this.state.isTeamNameAvailable === true ? React.createElement(\"div\", {\n      className: \"registerForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"candidateForm1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"candidateFormHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Candidate 1\"), React.createElement(\"div\", {\n      className: \"nameDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nameInputTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"nameInput\",\n      type: \"text\",\n      placeholder: \"Enter name\",\n      onChange: this.handleNameChange1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"phoneNumberDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"phoneNumberInputTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      className: \"phoneNumberInput\",\n      type: \"text\",\n      placeholder: \"Enter phone number\",\n      onChange: this.handlePhoneNumberChange1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"emailIDDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"emailIDInputTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Email ID\"), React.createElement(\"input\", {\n      className: \"emailIDInput\",\n      type: \"text\",\n      placeholder: \"Enter Email ID\",\n      onChange: this.handleEmailIDChange1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), this.state.toShowBlurBackGround ? React.createElement(\"div\", {\n      className: \"loaderDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"Bars\",\n      color: \"#00BFFF\",\n      height: 100,\n      width: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"candidateForm1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"candidateFormHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Candidate 2\"), React.createElement(\"div\", {\n      className: \"nameDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nameInputTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"nameInput\",\n      type: \"text\",\n      placeholder: \"Enter name\",\n      onChange: this.handleNameChange2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"phoneNumberDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"phoneNumberInputTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      className: \"phoneNumberInput\",\n      type: \"text\",\n      placeholder: \"Enter phone number\",\n      onChange: this.handlePhoneNumberChange2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"emailIDDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"emailIDInputTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Email ID\"), React.createElement(\"input\", {\n      className: \"emailIDInput\",\n      type: \"text\",\n      placeholder: \"Enter Email ID\",\n      onChange: this.handleEmailIDChange2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"registerButton\",\n      onClick: this.registerTeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Submit\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Register.js"],"names":["React","Loader","Register","Component","constructor","props","state","isTeamNameAvailable","teamName","candidateName1","candidateName2","candidatePhoneNumber1","candidatePhoneNumber2","candidateEmailID1","candidateEmailID2","toShowLoader","toShowBlurBackGround","teamAvailableMessage","toShowTeamMessage","checkTeamAvailable","bind","handleTeamChange","handleNameChange1","handleNameChange2","handlePhoneNumberChange1","handlePhoneNumberChange2","handleEmailIDChange1","handleEmailIDChange2","registerTeam","event","setState","target","value","fetch","headers","method","body","JSON","stringify","then","res","json","result","status","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner'\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTeamNameAvailable: false,\n      teamName:'',\n      candidateName1:'',\n      candidateName2:'',\n      candidatePhoneNumber1:'',\n      candidatePhoneNumber2:'',\n      candidateEmailID1:'',\n      candidateEmailID2:'',\n      toShowLoader:false,\n      toShowBlurBackGround: false,\n      teamAvailableMessage: '',\n      toShowTeamMessage: false\n    };\n    this.checkTeamAvailable = this.checkTeamAvailable.bind(this);\n    this.handleTeamChange = this.handleTeamChange.bind(this);\n    this.handleNameChange1 = this.handleNameChange1.bind(this);\n    this.handleNameChange2 = this.handleNameChange2.bind(this);\n    this.handlePhoneNumberChange1 = this.handlePhoneNumberChange1.bind(this);\n    this.handlePhoneNumberChange2 = this.handlePhoneNumberChange2.bind(this);\n    this.handleEmailIDChange1 = this.handleEmailIDChange1.bind(this);\n    this.handleEmailIDChange2 = this.handleEmailIDChange2.bind(this);\n    this.registerTeam = this.registerTeam.bind(this);\n    \n}\n\nhandleTeamChange(event){\n    this.setState({teamName:event.target.value});\n}\n\nhandleNameChange1(event){\n    this.setState({candidateName1:event.target.value});\n}\n\nhandleNameChange2(event){\n  this.setState({candidateName2:event.target.value});\n}\n\nhandlePhoneNumberChange1(event){\n  this.setState({candidatePhoneNumber1:event.target.value});\n}\n\nhandlePhoneNumberChange2(event){\n  this.setState({candidatePhoneNumber2:event.target.value});\n}\n\nhandleEmailIDChange1(event){\n  this.setState({candidateEmailID1:event.target.value});\n}\n\nhandleEmailIDChange2(event){\n  this.setState({candidateEmailID2:event.target.value});\n}\n\nregisterTeam(){\n  this.setState({toShowLoader:true,toShowBlurBackGround:true});\n    fetch(\"http://localhost:8080/codingPlatform/register?key=SHARED_KEY\",{\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify(\n      [{\"EmailID\":this.state.candidateEmailID1,\"PhoneNumber\":this.state.candidatePhoneNumber1,\"Name\":this.state.candidateName1,\"TeamName\":this.state.teamName,\"status\":null},\n      {\"EmailID\":this.state.candidateEmailID2,\"PhoneNumber\":this.state.candidatePhoneNumber1,\"Name\":this.state.candidateName1,\"TeamName\":this.state.teamName,\"status\":null}])\n      })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if(result.status === \"Success\"){\n            this.setState({toShowLoader:false,toShowBlurBackGround:false});\n            console.log(\"Registered Successfully\");\n          }\n        }\n      )\n}\n\ncheckTeamAvailable(){\n    this.setState({toShowLoader:true});\n    fetch(\"http://localhost:8080/codingPlatform/checkTeam?key=SHARED_KEY\",{\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\"teamName\":this.state.teamName,\"status\":null})\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if(result.status === \"Success\"){\n            this.setState({toShowTeamMessage:true,isTeamNameAvailable:true,toShowLoader:false, teamAvailableMessage:'Team Name Available'});\n          }else if(result.status === \"Fail\"){\n            this.setState({toShowTeamMessage:true,toShowLoader:false, teamAvailableMessage:'Team Name Not Available'});\n          }\n        }\n      )\n  }\n\nrender() {\n  return (\n    <div className=\"header\">\n        <div className=\"headerBackground\">\n        <div className=\"heading\">Break the ENGIMA</div>\n        <div className=\"quote\">“Those who can imagine anything, can create the impossible.”\n            ― Alan Turing</div>\n        </div>\n        <div className=\"registerForm\">\n            <div className=\"teamName\">Enter Team Name</div>\n            <div className=\"teamNameDiv\">\n              <input placeholder=\"Enter team name\" type=\"text\" className=\"teamNameInput\" onChange={this.handleTeamChange}/>\n              {this.state.isTeamNameAvailable?<div className=\"teamAvailableMessage\">{this.state.teamAvailableMessage}</div>\n              :<div></div>}</div>\n            {this.state.isTeamNameAvailable === false?<div className=\"submitDiv\"><div className=\"submitButton\" onClick={this.checkTeamAvailable}>Check Validity</div></div>:<div></div>}\n        </div>\n        {this.state.toShowLoader?<div className=\"loaderDiv\"><Loader\n         type=\"Bars\"\n         color=\"#00BFFF\"\n         height={100}\n         width={100}\n         /></div>:<div></div>}\n        {this.state.isTeamNameAvailable === true?\n        <div className=\"registerForm\">\n            <div className=\"candidateForm1\">\n                <div className=\"candidateFormHeader\">Candidate 1</div>\n                <div className=\"nameDiv\">\n                    <div className=\"nameInputTitle\">Name</div>\n                    <input className=\"nameInput\" type=\"text\" placeholder=\"Enter name\" onChange={this.handleNameChange1}/>\n                </div>\n                <div className=\"phoneNumberDiv\">\n                    <div className=\"phoneNumberInputTitle\">Phone Number</div>\n                    <input className=\"phoneNumberInput\" type=\"text\" placeholder=\"Enter phone number\" onChange={this.handlePhoneNumberChange1}/>\n                </div>\n                <div className=\"emailIDDiv\">\n                    <div className=\"emailIDInputTitle\">Email ID</div>\n                    <input className=\"emailIDInput\" type=\"text\" placeholder=\"Enter Email ID\" onChange={this.handleEmailIDChange1}/>\n                </div>\n            </div>\n            {this.state.toShowBlurBackGround?<div className=\"loaderDiv\"><Loader\n              type=\"Bars\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n            /></div>:<div></div>}\n            <div className=\"candidateForm1\">\n                <div className=\"candidateFormHeader\">Candidate 2</div>\n                <div className=\"nameDiv\">\n                    <div className=\"nameInputTitle\">Name</div>\n                    <input className=\"nameInput\" type=\"text\" placeholder=\"Enter name\" onChange={this.handleNameChange2}/>\n                </div>\n                <div className=\"phoneNumberDiv\">\n                    <div className=\"phoneNumberInputTitle\">Phone Number</div>\n                    <input className=\"phoneNumberInput\" type=\"text\" placeholder=\"Enter phone number\" onChange={this.handlePhoneNumberChange2}/>\n                </div>\n                <div className=\"emailIDDiv\">\n                    <div className=\"emailIDInputTitle\">Email ID</div>\n                    <input className=\"emailIDInput\" type=\"text\" placeholder=\"Enter Email ID\" onChange={this.handleEmailIDChange2}/>\n                </div>\n            </div>\n            <div className=\"registerButton\" onClick={ this.registerTeam }>Submit</div>\n        </div>:<div></div>}\n    </div>\n  );\n}\n}\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}