{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Question.js\";\nimport React from 'react';\nimport './Register.css';\n\nvar hackerEarth = require('hackerearth-node'); //require the Library\n//Now set your application \n\n\nvar hackerEarth = new hackerEarth('f3c1455800df92db6737d087ac0c93424bbe1e40', //Your Client Secret Key here this is mandatory\n1 //mode sync=1 or async(optional)=0 or null async is by default and preferred for nodeJS\n);\nvar config = {};\nconfig.time_limit = 1; //your time limit in integer\n\nconfig.memory_limit = 323244; //your memory limit in integer\n\nconfig.source = 'print(\"Hello\")'; //your source code for which you want to use hackerEarth api\n\nconfig.input = \"\"; //input against which you have to test your source code\n\nconfig.language = \"Py\"; //optional choose any one of them or none\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: ''\n    };\n    this.compileCode = this.compileCode.bind(this);\n  }\n\n  componentDidMount() {}\n\n  compileCode() {\n    hackerEarth.compile(config).then(result => {\n      console.log(result);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      onClick: this.compileCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"hello world\"));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Question.js"],"names":["React","hackerEarth","require","config","time_limit","memory_limit","source","input","language","Question","Component","constructor","props","state","code","compileCode","bind","componentDidMount","compile","then","result","console","log","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAEA,IAAIC,WAAW,GAACC,OAAO,CAAC,kBAAD,CAAvB,C,CAA6C;AAC7C;;;AACA,IAAID,WAAW,GAAC,IAAIA,WAAJ,CACgB,0CADhB,EAC6D;AAC7C,CAFhB,CAEmB;AAFnB,CAAhB;AAIA,IAAIE,MAAM,GAAC,EAAX;AACAA,MAAM,CAACC,UAAP,GAAkB,CAAlB,C,CAAsB;;AACtBD,MAAM,CAACE,YAAP,GAAoB,MAApB,C,CAA6B;;AAC7BF,MAAM,CAACG,MAAP,GAAc,gBAAd,C,CAAiC;;AACjCH,MAAM,CAACI,KAAP,GAAa,EAAb,C,CAAkB;;AAClBJ,MAAM,CAACK,QAAP,GAAgB,IAAhB,C,CAAsB;;AAEtB,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC;AADI,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE,CAElB;;AAEDF,EAAAA,WAAW,GAAE;AACTd,IAAAA,WAAW,CAACiB,OAAZ,CAAoBf,MAApB,EACqBgB,IADrB,CAC0BC,MAAM,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAHrB,EAIqBG,KAJrB,CAI2BC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KANrB;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAkB,MAAA,OAAO,EAAE,KAAKV,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADF;AAKD;;AA7BsC;;AA+BvC,eAAeN,QAAf","sourcesContent":["import React from 'react';\nimport './Register.css';\n  \nvar hackerEarth=require('hackerearth-node'); //require the Library\n//Now set your application \nvar hackerEarth=new hackerEarth(\n                                'f3c1455800df92db6737d087ac0c93424bbe1e40',  //Your Client Secret Key here this is mandatory\n                                1  //mode sync=1 or async(optional)=0 or null async is by default and preferred for nodeJS\n);\nvar config={};\nconfig.time_limit=1;  //your time limit in integer\nconfig.memory_limit=323244;  //your memory limit in integer\nconfig.source='print(\"Hello\")';  //your source code for which you want to use hackerEarth api\nconfig.input=\"\";  //input against which you have to test your source code\nconfig.language=\"Py\"; //optional choose any one of them or none\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        code:''\n    };\n    this.compileCode = this.compileCode.bind(this);\n}\n\ncomponentDidMount(){\n    \n}\n\ncompileCode(){\n    hackerEarth.compile(config)\n                        .then(result => {\n                          console.log(result);\n                        })\n                        .catch(err => {\n                            console.log(err);\n                        });\n}\n\nrender() {\n  return (\n    <div className=\"\">\n        <div className=\"\" onClick={this.compileCode}>hello world</div>\n    </div>\n  );\n}\n}\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}