{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prabhaty\\\\Desktop\\\\CodingPlatformFrontEnd\\\\src\\\\Puzzle.js\";\nimport React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner';\nimport cookie from 'react-cookies';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      puzzleStatement: '',\n      puzzleDescription: '',\n      answer: '',\n      toShowLoader: false,\n      questionType: '',\n      toShowAnswerLoader: false\n    };\n    this.onPuzzleAnswerButtonClick = this.onPuzzleAnswerButtonClick.bind(this);\n    this.inputPuzzle = this.inputPuzzle.bind(this);\n  }\n\n  inputPuzzle(event) {\n    this.setState({\n      answer: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      toShowLoader: true\n    });\n    var teamName = cookie.load('teamName');\n\n    if (teamName !== null && teamName !== undefined && teamName !== \"\") {\n      fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\", {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          \"teamName\": teamName\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.status === \"Success\") {\n          this.setState({\n            puzzleStatement: result.puzzleStatement,\n            puzzleDescription: result.puzzleDescription,\n            questionType: result.questionType,\n            toShowLoader: false\n          });\n        } else if (result.status === \"Fail\") {\n          alert(\"Something went wrong\");\n        }\n      });\n    } else {\n      this.props.history.push('/login');\n    }\n  }\n\n  onPuzzleAnswerButtonClick() {\n    var teamName = cookie.load('teamName');\n\n    if (this.state.answer === \"\" || this.state.answer === undefined || this.state.answer === null) {\n      alert(\"Please fill answer\");\n    } else {\n      fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\", {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          \"teamName\": teamName,\n          \"answer\": this.state.answer,\n          \"questionType\": this.state.questionType\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.status === \"Success\") {\n          this.setState({\n            toShowAnswerLoader: false\n          });\n          this.props.toggleQuestion();\n        } else if (result.status === \"Fail\") {\n          this.setState({\n            toShowAnswerLoader: false\n          });\n          alert(\"Answer is wrong\");\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.toShowLoader === true ? React.createElement(\"div\", {\n      className: \"loadingScreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"Circles\",\n      color: \"#3578E5\",\n      height: 100,\n      width: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"puzzleStatement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.puzzleStatement), React.createElement(\"div\", {\n      className: \"puzzleDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.puzzleDescription), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"puzzleInput\",\n      type: \"text\",\n      placeholder: \"Answer\",\n      onChange: this.inputPuzzle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"puzzleAnswerButton\",\n      onClick: this.onPuzzleAnswerButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Submit\"), this.state.toShowAnswerLoader === true ? React.createElement(Loader, {\n      type: \"Circles\",\n      color: \"#3578E5\",\n      height: 100,\n      width: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Puzzle;","map":{"version":3,"sources":["C:/Users/prabhaty/Desktop/CodingPlatformFrontEnd/src/Puzzle.js"],"names":["React","Loader","cookie","Puzzle","Component","constructor","props","state","puzzleStatement","puzzleDescription","answer","toShowLoader","questionType","toShowAnswerLoader","onPuzzleAnswerButtonClick","bind","inputPuzzle","event","setState","target","value","componentDidMount","teamName","load","undefined","fetch","headers","method","body","JSON","stringify","then","res","json","result","status","alert","history","push","toggleQuestion","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Register.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport cookie from 'react-cookies';\r\n\r\nclass Puzzle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      puzzleStatement:'',\r\n      puzzleDescription:'',\r\n      answer:'',\r\n      toShowLoader:false,\r\n      questionType:'',\r\n      toShowAnswerLoader:false\r\n    };\r\n    this.onPuzzleAnswerButtonClick = this.onPuzzleAnswerButtonClick.bind(this);\r\n    this.inputPuzzle = this.inputPuzzle.bind(this);\r\n}\r\ninputPuzzle(event){\r\n  this.setState({answer:event.target.value});\r\n}\r\ncomponentDidMount(){\r\n  this.setState({toShowLoader:true});\r\n  var teamName=cookie.load('teamName');\r\n  if(teamName!==null&&teamName!==undefined&&teamName!==\"\"){\r\n  fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\",{\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({\"teamName\":teamName})\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              if(result.status === \"Success\"){\r\n                this.setState({puzzleStatement:result.puzzleStatement,puzzleDescription:result.puzzleDescription,questionType:result.questionType,toShowLoader:false});\r\n              }else if(result.status === \"Fail\"){\r\n                  alert(\"Something went wrong\");\r\n              }\r\n            }\r\n    )\r\n  }else{\r\n    this.props.history.push('/login');\r\n  }\r\n}\r\nonPuzzleAnswerButtonClick(){\r\n  var teamName=cookie.load('teamName');\r\n  if(this.state.answer===\"\"||this.state.answer===undefined||this.state.answer===null){\r\n    alert(\"Please fill answer\");\r\n  }else{\r\n  fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\",{\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify({\"teamName\":teamName,\"answer\":this.state.answer,\"questionType\":this.state.questionType})\r\n  })\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        if(result.status === \"Success\"){\r\n          this.setState({toShowAnswerLoader:false});\r\n          this.props.toggleQuestion();\r\n        }else if(result.status === \"Fail\"){\r\n          this.setState({toShowAnswerLoader:false});\r\n          alert(\"Answer is wrong\");\r\n        }\r\n      }\r\n)\r\n  }\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"header\">\r\n      {this.state.toShowLoader===true?<div className=\"loadingScreen\">\r\n      <Loader\r\n         type=\"Circles\"\r\n         color=\"#3578E5\"\r\n         height={100}\r\n         width={100}\r\n      />\r\n      </div>:\r\n      <div>\r\n        <div className=\"puzzleStatement\">{this.state.puzzleStatement}</div>\r\n        <div className=\"puzzleDescription\">{this.state.puzzleDescription}</div>\r\n        <div className=\"\"><input className=\"puzzleInput\" type=\"text\" placeholder=\"Answer\" onChange={this.inputPuzzle}/></div>\r\n        <div className=\"puzzleAnswerButton\" onClick={this.onPuzzleAnswerButtonClick}>Submit</div>\r\n        {this.state.toShowAnswerLoader===true?\r\n          <Loader\r\n          type=\"Circles\"\r\n          color=\"#3578E5\"\r\n          height={100}\r\n          width={100}\r\n          />\r\n       :<div></div>}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default Puzzle;\r\n"]},"metadata":{},"sourceType":"module"}