{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Login.js\";\nimport React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner';\nimport cookie from 'react-cookies';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamName: '',\n      passCode: ''\n    };\n    this.checkTeam = this.checkTeam.bind(this);\n    this.saveChallengeData = this.saveChallengeData.bind(this);\n    this.handleTeam = this.handleTeam.bind(this);\n    this.handlePassCode = this.handlePassCode.bind(this);\n  }\n\n  handleTeam(event) {\n    this.setState({\n      teamName: event.target.value\n    });\n  }\n\n  handlePassCode(event) {\n    this.setState({\n      passCode: event.target.value\n    });\n  }\n\n  checkTeam() {\n    if (this.state.teamName.length > 0 && this.state.passCode.length > 0) {\n      this.setState({\n        toShowLoader: true\n      });\n      fetch(\"http://localhost:8080/codingPlatform/login?key=SHARED_KEY\", {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          \"teamName\": this.state.teamName,\n          \"passCode\": this.state.teamName,\n          \"status\": null\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.status === \"Success\") {\n          this.saveChallengeData(result);\n        } else if (result.status === \"Fail\") {\n          alert(\"Something went wrong\");\n        }\n      });\n    } else if (this.state.teamName.length === 0) {\n      alert(\"Team name cannot be empty\");\n    } else if (this.state.passCode.length === 0) {\n      alert(\"Passcode cannot be empty\");\n    }\n  }\n\n  saveChallengeData(challengeData) {\n    cookie.save('challengeQuestion', challengeData, {\n      path: '/'\n    });\n    cookie.save('challengeQuestionNumber', '1', {\n      path: '/'\n    });\n    console.log(cookie.load('challengeQuestion'));\n    console.log(cookie.load('challengeQuestionNumber'));\n    this.setState({\n      toShowLoader: false\n    });\n    this.props.history.push('/challenge');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headerBackground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Break the ENGIMA\"), React.createElement(\"div\", {\n      className: \"quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"\\u201CThose who can imagine anything, can create the impossible.\\u201D \\u2015 Alan Turing\")), React.createElement(\"div\", {\n      className: \"registerForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"teamName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Team Name\"), React.createElement(\"div\", {\n      className: \"teamNameDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"teamID\",\n      placeholder: \"Enter team name\",\n      type: \"text\",\n      className: \"teamNameInput\",\n      onChange: this.handleTeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"teamName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Team Passcode\"), React.createElement(\"div\", {\n      className: \"teamNameDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"teampasscode\",\n      placeholder: \"Enter passcode\",\n      type: \"password\",\n      className: \"teamNameInput\",\n      onChange: this.handlePassCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"submitDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"submitButton\",\n      onClick: this.checkTeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Login\"))), this.state.toShowLoader === true ? React.createElement(\"div\", {\n      className: \"loaderDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"Circles \",\n      color: \"#00BFFF\",\n      height: 100,\n      width: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/CodingPlatformFrontEnd/src/Login.js"],"names":["React","Loader","cookie","Login","Component","constructor","props","state","teamName","passCode","checkTeam","bind","saveChallengeData","handleTeam","handlePassCode","event","setState","target","value","length","toShowLoader","fetch","headers","method","body","JSON","stringify","then","res","json","result","status","alert","challengeData","save","path","console","log","load","history","push","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner';\nimport cookie from 'react-cookies';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamName:'',\n      passCode:''\n    };\n    this.checkTeam = this.checkTeam.bind(this);\n    this.saveChallengeData = this.saveChallengeData.bind(this);\n    this.handleTeam = this.handleTeam.bind(this);\n    this.handlePassCode = this.handlePassCode.bind(this);\n}\n\nhandleTeam(event){\n    this.setState({teamName:event.target.value});\n}\n\nhandlePassCode(event){\n    this.setState({passCode:event.target.value});\n}\n\ncheckTeam(){\n    if(this.state.teamName.length>0&&this.state.passCode.length>0){\n        this.setState({toShowLoader:true});\n        fetch(\"http://localhost:8080/codingPlatform/login?key=SHARED_KEY\",{\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: \"POST\",\n          body: JSON.stringify({\"teamName\":this.state.teamName,\"passCode\":this.state.teamName,\"status\":null})\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n              if(result.status === \"Success\"){\n                this.saveChallengeData(result);\n              }else if(result.status === \"Fail\"){\n                  alert(\"Something went wrong\");\n              }\n            }\n          )\n      }else if(this.state.teamName.length===0){\n        alert(\"Team name cannot be empty\");\n      }else if(this.state.passCode.length===0){\n        alert(\"Passcode cannot be empty\");\n      }\n}\n\nsaveChallengeData(challengeData){\n    cookie.save('challengeQuestion', challengeData, { path: '/' });\n    cookie.save('challengeQuestionNumber', '1', {path: '/'} );\n    console.log(cookie.load('challengeQuestion'));\n    console.log(cookie.load('challengeQuestionNumber'));\n    this.setState({toShowLoader:false});\n    this.props.history.push('/challenge');\n}\n\nrender() {\n  return (\n    <div className=\"header\">\n        <div className=\"headerBackground\">\n        <div className=\"heading\">Break the ENGIMA</div>\n        <div className=\"quote\">“Those who can imagine anything, can create the impossible.”\n            ― Alan Turing</div>\n        </div>\n        <div className=\"registerForm\">\n            <div className=\"teamName\">Team Name</div>\n            <div className=\"teamNameDiv\">\n              <input id=\"teamID\" placeholder=\"Enter team name\" type=\"text\" className=\"teamNameInput\" onChange={this.handleTeam}/>\n            </div>\n            <div className=\"teamName\">Team Passcode</div>\n            <div className=\"teamNameDiv\">\n              <input id=\"teampasscode\" placeholder=\"Enter passcode\" type=\"password\" className=\"teamNameInput\" onChange={this.handlePassCode}/>\n            </div>\n            <div className=\"submitDiv\"><div className=\"submitButton\" onClick={this.checkTeam}>Login</div></div>\n        </div>\n        {this.state.toShowLoader===true?<div className=\"loaderDiv\"><Loader\n         type=\"Circles \"\n         color=\"#00BFFF\"\n         height={100}\n         width={100}\n         /></div>:<div></div>}\n    </div>\n  );\n}\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}