{"version":3,"sources":["Register.js","Checkout.js","Puzzle.js","Code.js","Question.js","Login.js","CompleteTestPage.js","App.js","serviceWorker.js","index.js"],"names":["Register","props","state","isTeamNameAvailable","teamName","candidateName1","candidateName2","candidateName3","candidateName4","candidatePhoneNumber1","candidatePhoneNumber2","candidatePhoneNumber3","candidatePhoneNumber4","candidateEmailID1","candidateEmailID2","candidateEmailID3","candidateEmailID4","toShowLoader","toShowBlurBackGround","teamAvailableMessage","toShowTeamMessage","checkTeamAvailable","bind","handleTeamChange","handleNameChange1","handleNameChange2","handleNameChange3","handleNameChange4","handlePhoneNumberChange1","handlePhoneNumberChange2","handlePhoneNumberChange3","handlePhoneNumberChange4","handleEmailIDChange1","handleEmailIDChange2","handleEmailIDChange3","handleEmailIDChange4","registerTeam","event","this","setState","target","value","length","fetch","headers","method","body","JSON","stringify","then","res","json","result","status","history","push","alert","document","getElementById","readOnly","className","id","placeholder","type","onChange","onClick","color","height","width","React","Component","Checkout","src","Puzzle","puzzleStatement","puzzleDescription","answer","questionType","toShowAnswerLoader","onPuzzleAnswerButtonClick","inputPuzzle","cookie","load","undefined","toggleQuestion","Code","require","handleChange","selectedOption","codeStatement","codeDescription","codeInputFormat","codeOutputFormat","codeTestCases","codeOutput","codeInput","example","placeHolder","oAvailableLanguage","label","compileCode","submitCode","submitScore","updateCode","splitCodeInput","splitCodeOutput","splitCodeExample","problemStatement","questionInputFormat","questionOutputFormat","problemDescription","output","split","map","i","key","options","Question","code","isPuzzleCode","questionNumber","time","timer","startTimer","countDown","onEndTest","checkProgress","openTimer","stopTimer","secs","divisor_for_minutes","divisor_for_seconds","Math","floor","ceil","timeLeftVar","secondsToTime","parseInt","setInterval","seconds","save","toString","path","clearInterval","lengt","remove","h","m","s","Login","passCode","checkTeam","saveChallengeData","handleTeam","handlePassCode","temaName","challengeData","CompleteTestPage","App","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce00a1f3.chunk.js","sourcesContent":["import React from 'react';\nimport './Register.css';\nimport Loader from 'react-loader-spinner'\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTeamNameAvailable: false,\n      teamName:'',\n      candidateName1:'',\n      candidateName2:'',\n\t  candidateName3:'',\n      candidateName4:'',\n      candidatePhoneNumber1:'',\n      candidatePhoneNumber2:'',\n\t  candidatePhoneNumber3:'',\n      candidatePhoneNumber4:'',\n      candidateEmailID1:'',\n      candidateEmailID2:'',\n\t  candidateEmailID3:'',\n      candidateEmailID4:'',\n      toShowLoader:false,\n      toShowBlurBackGround: false,\n      teamAvailableMessage: '',\n      toShowTeamMessage: false\n    };\n    this.checkTeamAvailable = this.checkTeamAvailable.bind(this);\n    this.handleTeamChange = this.handleTeamChange.bind(this);\n    this.handleNameChange1 = this.handleNameChange1.bind(this);\n    this.handleNameChange2 = this.handleNameChange2.bind(this);\n\t  this.handleNameChange3 = this.handleNameChange3.bind(this);\n    this.handleNameChange4 = this.handleNameChange4.bind(this);\n    this.handlePhoneNumberChange1 = this.handlePhoneNumberChange1.bind(this);\n    this.handlePhoneNumberChange2 = this.handlePhoneNumberChange2.bind(this);\n\t  this.handlePhoneNumberChange3 = this.handlePhoneNumberChange3.bind(this);\n    this.handlePhoneNumberChange4 = this.handlePhoneNumberChange4.bind(this);\n    this.handleEmailIDChange1 = this.handleEmailIDChange1.bind(this);\n    this.handleEmailIDChange2 = this.handleEmailIDChange2.bind(this);\n\t  this.handleEmailIDChange3 = this.handleEmailIDChange3.bind(this);\n    this.handleEmailIDChange4 = this.handleEmailIDChange4.bind(this);\n    this.registerTeam = this.registerTeam.bind(this);\n    \n}\n\nhandleTeamChange(event){\n    this.setState({teamName:event.target.value});\n}\n\nhandleNameChange1(event){\n    this.setState({candidateName1:event.target.value});\n}\n\nhandleNameChange2(event){\n  this.setState({candidateName2:event.target.value});\n}\n\nhandleNameChange3(event){\n    this.setState({candidateName3:event.target.value});\n}\n\nhandleNameChange4(event){\n  this.setState({candidateName4:event.target.value});\n}\n\nhandlePhoneNumberChange1(event){\n  this.setState({candidatePhoneNumber1:event.target.value});\n}\n\nhandlePhoneNumberChange2(event){\n  this.setState({candidatePhoneNumber2:event.target.value});\n}\n\nhandlePhoneNumberChange3(event){\n  this.setState({candidatePhoneNumber3:event.target.value});\n}\n\nhandlePhoneNumberChange4(event){\n  this.setState({candidatePhoneNumber4:event.target.value});\n}\n\nhandleEmailIDChange1(event){\n  this.setState({candidateEmailID1:event.target.value});\n}\n\nhandleEmailIDChange2(event){\n  this.setState({candidateEmailID2:event.target.value});\n}\n\nhandleEmailIDChange3(event){\n  this.setState({candidateEmailID3:event.target.value});\n}\n\nhandleEmailIDChange4(event){\n  this.setState({candidateEmailID4:event.target.value});\n}\n\nregisterTeam(){\n  if(this.state.candidatePhoneNumber1.length===10&&this.state.candidatePhoneNumber2.length===10&&this.state.candidatePhoneNumber3.length===10&&this.state.candidatePhoneNumber4.length===10){\n  this.setState({toShowLoader:true,toShowBlurBackGround:true});\n    fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/register?key=SHARED_KEY\",{\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify(\n      [{\"EmailID\":this.state.candidateEmailID1,\"PhoneNumber\":this.state.candidatePhoneNumber1,\"Name\":this.state.candidateName1,\"TeamName\":this.state.teamName,\"status\":null},\n      {\"EmailID\":this.state.candidateEmailID2,\"PhoneNumber\":this.state.candidatePhoneNumber2,\"Name\":this.state.candidateName2,\"TeamName\":this.state.teamName,\"status\":null},\n\t  {\"EmailID\":this.state.candidateEmailID3,\"PhoneNumber\":this.state.candidatePhoneNumber3,\"Name\":this.state.candidateName3,\"TeamName\":this.state.teamName,\"status\":null},\n\t  {\"EmailID\":this.state.candidateEmailID4,\"PhoneNumber\":this.state.candidatePhoneNumber4,\"Name\":this.state.candidateName4,\"TeamName\":this.state.teamName,\"status\":null}\n\t  ])\n      })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if(result.status === \"Success\"){\n            this.setState({toShowLoader:false,toShowBlurBackGround:false});\n            this.props.history.push('');\n            this.props.history.push('/checkout');\n          }\n        }\n      )\n  }else{\n    alert(\"Please check all the Phone Numbers once again\");\n  }\n}\n\ncheckTeamAvailable(){\n    if(this.state.teamName.length>0){\n    this.setState({toShowLoader:true});\n    fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/checkTeam?key=SHARED_KEY\",{\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\"teamName\":this.state.teamName,\"status\":null})\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if(result.status === \"Success\"){\n            this.setState({toShowTeamMessage:true,isTeamNameAvailable:true,toShowLoader:false, teamAvailableMessage:'Team Name Available'});\n            document.getElementById('teamID').readOnly = true;\n          }else if(result.status === \"Fail\"){\n            alert(\"Team Name Not Available\");\n            this.setState({toShowTeamMessage:true,toShowLoader:false, teamAvailableMessage:'Team Name Not Available'});\n          }\n        }\n      )\n  }else{\n    alert(\"Team name cannot be empty\");\n  }\n}\n\nrender() {\n  return (\n    <div className=\"header\">\n        <div className=\"headerBackground\">\n        <div className=\"heading\">Break the ENGIMA</div>\n        <div className=\"quote\">“Those who can imagine anything, can create the impossible.”\n            ― Alan Turing</div>\n        </div>\n        <div className=\"registerForm\">\n            <div className=\"teamName\">Enter Team Name</div>\n            <div className=\"teamNameDiv\">\n              <input id=\"teamID\" placeholder=\"Enter team name\" type=\"text\" className=\"teamNameInput\" onChange={this.handleTeamChange}/></div>\n            {this.state.isTeamNameAvailable === false?<div className=\"submitDiv\"><div className=\"submitButton\" onClick={this.checkTeamAvailable}>Check Validity</div></div>:<div></div>}\n        </div>\n        {this.state.toShowLoader?<div className=\"loaderDiv\"><Loader\n         type=\"Circles\"\n         color=\"#00BFFF\"\n         height={100}\n         width={100}\n         /></div>:<div></div>}\n        {this.state.isTeamNameAvailable === true?\n        <div className=\"registerForm\">\n            <div className=\"candidateForm1\">\n                <div className=\"candidateFormHeader\">Candidate 1</div>\n                <div className=\"nameDiv\">\n                    <div className=\"nameInputTitle\">Name</div>\n                    <input className=\"nameInput\" type=\"text\" placeholder=\"Enter name\" onChange={this.handleNameChange1}/>\n                </div>\n                <div className=\"phoneNumberDiv\">\n                    <div className=\"phoneNumberInputTitle\">Phone Number</div>\n                    <input className=\"phoneNumberInput\" type=\"text\" placeholder=\"Enter phone number\" onChange={this.handlePhoneNumberChange1}/>\n                </div>\n                <div className=\"emailIDDiv\">\n                    <div className=\"emailIDInputTitle\">Email ID</div>\n                    <input className=\"emailIDInput\" type=\"text\" placeholder=\"Enter Email ID\" onChange={this.handleEmailIDChange1}/>\n                </div>\n            </div>\n            <div className=\"candidateForm1\">\n                <div className=\"candidateFormHeader\">Candidate 2</div>\n                <div className=\"nameDiv\">\n                    <div className=\"nameInputTitle\">Name</div>\n                    <input className=\"nameInput\" type=\"text\" placeholder=\"Enter name\" onChange={this.handleNameChange2}/>\n                </div>\n                <div className=\"phoneNumberDiv\">\n                    <div className=\"phoneNumberInputTitle\">Phone Number</div>\n                    <input className=\"phoneNumberInput\" type=\"text\" placeholder=\"Enter phone number\" onChange={this.handlePhoneNumberChange2}/>\n                </div>\n                <div className=\"emailIDDiv\">\n                    <div className=\"emailIDInputTitle\">Email ID</div>\n                    <input className=\"emailIDInput\" type=\"text\" placeholder=\"Enter Email ID\" onChange={this.handleEmailIDChange2}/>\n                </div>\n            </div>\n\t\t\t<div className=\"candidateForm1\">\n                <div className=\"candidateFormHeader\">Candidate 3</div>\n                <div className=\"nameDiv\">\n                    <div className=\"nameInputTitle\">Name</div>\n                    <input className=\"nameInput\" type=\"text\" placeholder=\"Enter name\" onChange={this.handleNameChange3}/>\n                </div>\n                <div className=\"phoneNumberDiv\">\n                    <div className=\"phoneNumberInputTitle\">Phone Number</div>\n                    <input className=\"phoneNumberInput\" type=\"text\" placeholder=\"Enter phone number\" onChange={this.handlePhoneNumberChange3}/>\n                </div>\n                <div className=\"emailIDDiv\">\n                    <div className=\"emailIDInputTitle\">Email ID</div>\n                    <input className=\"emailIDInput\" type=\"text\" placeholder=\"Enter Email ID\" onChange={this.handleEmailIDChange3}/>\n                </div>\n            </div>\n\t\t\t<div className=\"candidateForm1\">\n                <div className=\"candidateFormHeader\">Candidate 4</div>\n                <div className=\"nameDiv\">\n                    <div className=\"nameInputTitle\">Name</div>\n                    <input className=\"nameInput\" type=\"text\" placeholder=\"Enter name\" onChange={this.handleNameChange4}/>\n                </div>\n                <div className=\"phoneNumberDiv\">\n                    <div className=\"phoneNumberInputTitle\">Phone Number</div>\n                    <input className=\"phoneNumberInput\" type=\"text\" placeholder=\"Enter phone number\" onChange={this.handlePhoneNumberChange4}/>\n                </div>\n                <div className=\"emailIDDiv\">\n                    <div className=\"emailIDInputTitle\">Email ID</div>\n                    <input className=\"emailIDInput\" type=\"text\" placeholder=\"Enter Email ID\" onChange={this.handleEmailIDChange4}/>\n                </div>\n            </div>\n            <div className=\"registerButton\" onClick={ this.registerTeam }>Submit</div>\n        </div>:<div></div>}\n    </div>\n  );\n}\n}\nexport default Register;\n","import React from 'react';\nimport './Register.css';\n\nclass Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n}\n\nrender() {\n  return (\n    <div className=\"\">\n        <div className=\"imageHolder\"><img src=\"./green-tick.png\"/></div>\n        <div className=\"imageMessage\">Registration Successful</div>\n    </div>\n  );\n}\n}\nexport default Checkout;\n","import React from 'react';\r\nimport './Register.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport cookie from 'react-cookies';\r\n\r\nclass Puzzle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      puzzleStatement:'',\r\n      puzzleDescription:'',\r\n      answer:'',\r\n      toShowLoader:false,\r\n      questionType:'',\r\n      toShowAnswerLoader:false\r\n    };\r\n    this.onPuzzleAnswerButtonClick = this.onPuzzleAnswerButtonClick.bind(this);\r\n    this.inputPuzzle = this.inputPuzzle.bind(this);\r\n}\r\ninputPuzzle(event){\r\n  this.setState({answer:event.target.value});\r\n}\r\ncomponentDidMount(){\r\n  this.setState({toShowLoader:true});\r\n  var teamName=cookie.load('teamName');\r\n  if(teamName!==null&&teamName!==undefined&&teamName!==\"\"){\r\n  fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\",{\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({\"teamName\":teamName})\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              if(result.status === \"Success\"){\r\n                this.setState({puzzleStatement:result.puzzleStatement,puzzleDescription:result.puzzleDescription,questionType:result.questionType,toShowLoader:false});\r\n              }else if(result.status === \"Fail\"){\r\n                  alert(\"Something went wrong\");\r\n              }\r\n            }\r\n    )\r\n  }else{\r\n    this.props.history.push('/login');\r\n  }\r\n}\r\nonPuzzleAnswerButtonClick(){\r\n  var teamName=cookie.load('teamName');\r\n  if(this.state.answer===\"\"||this.state.answer===undefined||this.state.answer===null){\r\n    alert(\"Please fill answer\");\r\n  }else{\r\n  fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\",{\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify({\"teamName\":teamName,\"answer\":this.state.answer,\"questionType\":this.state.questionType})\r\n  })\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        if(result.status === \"Success\"){\r\n          this.setState({toShowAnswerLoader:false});\r\n          this.props.toggleQuestion();\r\n        }else if(result.status === \"Fail\"){\r\n          this.setState({toShowAnswerLoader:false});\r\n          alert(\"Answer is wrong\");\r\n        }\r\n      }\r\n)\r\n  }\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"header\">\r\n      {this.state.toShowLoader===true?<div className=\"loadingScreen\">\r\n      <Loader\r\n         type=\"Circles\"\r\n         color=\"#3578E5\"\r\n         height={100}\r\n         width={100}\r\n      />\r\n      </div>:\r\n      <div>\r\n        <div className=\"puzzleStatement\">{this.state.puzzleStatement}</div>\r\n        <div className=\"puzzleDescription\">{this.state.puzzleDescription}</div>\r\n        <div className=\"\"><input className=\"puzzleInput\" type=\"text\" placeholder=\"Answer\" onChange={this.inputPuzzle}/></div>\r\n        <div className=\"puzzleAnswerButton\" onClick={this.onPuzzleAnswerButtonClick}>Submit</div>\r\n        {this.state.toShowAnswerLoader===true?\r\n        <div className=\"puzzleAnswerSubmit\">\r\n          <Loader\r\n          type=\"Circles\"\r\n          color=\"#3578E5\"\r\n          height={50}\r\n          width={50}\r\n          />\r\n          </div>\r\n       :<div></div>}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default Puzzle;\r\n","import React from 'react';\r\nimport './Register.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport cookie from 'react-cookies';\r\nimport Select from 'react-select';\r\nimport qs from 'qs';\r\n\r\nvar hackerEarth=require('hackerearth-node'); //require the Library\r\n//Now set your application \r\nvar hackerEarth=new hackerEarth(\r\n        'c80a8e5ab76c54820f05971d7ed7b8286431087a',  //Your Client Secret Key here this is mandatory\r\n        0  //mode sync=1 or async(optional)=0 or null async is by default and preferred for nodeJS\r\n);\r\nvar config={};\r\nconfig.time_limit=1;  //your time limit in integer\r\nconfig.memory_limit=323244;  //your memory limit in integer\r\nconfig.source='print(\"Hello\")';  //your source code for which you want to use hackerEarth api\r\nconfig.input=\"\";  //input against which you have to test your source code\r\nconfig.language=\"Py\"; //optional choose any one of them or none\r\n\r\nclass Code extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      codeStatement:'',\r\n      codeDescription:'',\r\n      codeInputFormat:[],\r\n      codeOutputFormat:[],\r\n      codeTestCases:'',\r\n      toShowLoader:false,\r\n      questionType:'',\r\n      codeOutput:'',\r\n      codeInput:'',\r\n      example:[],\r\n      placeHolder: \"Select Language\",\r\n      selectedOption:'',\r\n      oAvailableLanguage:[{value:\"C\", label:\"C\"},{value:\"CPP\", label:\"C++\"},{value:\"Py\", label:\"Python\"},{value:\"JAVA\", label:\"JAVA\"}]\r\n    };\r\n    this.compileCode = this.compileCode.bind(this);\r\n    this.submitCode = this.submitCode.bind(this);\r\n    this.submitScore = this.submitScore.bind(this);\r\n    this.updateCode = this.updateCode.bind(this);\r\n    this.splitCodeInput = this.splitCodeInput.bind(this);\r\n    this.splitCodeOutput = this.splitCodeOutput.bind(this);\r\n    this.splitCodeExample = this.splitCodeExample.bind(this);\r\n}\r\ncomponentDidMount(){\r\n  this.setState({toShowLoader:true});\r\n  var teamName=cookie.load('teamName');\r\n  if(teamName!==null&&teamName!==undefined&&teamName!==\"\"){\r\n  fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\",{\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({\"teamName\":teamName})\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              if(result.status === \"Success\"&&result.problemStatement!==\"4\"){\r\n                this.splitCodeInput(result.questionInputFormat);\r\n                this.splitCodeOutput(result.questionOutputFormat);\r\n                this.splitCodeExample(result.example);\r\n                this.setState({codeStatement:result.problemStatement,codeDescription:result.problemDescription, toShowLoader:false});\r\n              }else if(result.problemStatement===\"4\"){\r\n                alert(\"Test Completed\");\r\n              }\r\n              else if(result.status === \"Fail\"){\r\n                  alert(\"Something went wrong\");\r\n              }\r\n            }\r\n    )\r\n  }else{\r\n    this.props.history.push('/login');\r\n  }\r\n}\r\nupdateCode(event){\r\n  this.setState({codeInput:event.target.value});\r\n}\r\nsplitCodeInput(questionInputFormat){\r\n  var delimiter=\"$_$\";\r\n  var output = questionInputFormat.split(delimiter);\r\n  this.setState({codeInputFormat:output});\r\n}\r\nsplitCodeOutput(questionInputFormat){\r\n  var delimiter=\"$_$\";\r\n  var output = questionInputFormat.split(delimiter);\r\n  this.setState({codeOutputFormat:output});\r\n}\r\nsplitCodeExample(questionInputFormat){\r\n  var delimiter=\"$_$\";\r\n  var output = questionInputFormat.split(delimiter);\r\n  this.setState({example:output});\r\n}\r\ncompileCode(){\r\n}\r\nsubmitCode(){\r\n  this.submitScore();\r\n}\r\nsubmitScore(){\r\n  var teamName=cookie.load('teamName');\r\n  if(teamName!==null&&teamName!==undefined&&teamName!==\"\"){\r\n  fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchQuestion?key=SHARED_KEY\",{\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({\"teamName\":teamName,\"answer\":\"ac\"})\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              if(result.status === \"Success\"){\r\n                  this.props.toggleQuestion();\r\n              }else if(result.status === \"Fail\"){\r\n                  alert(\"Something went wrong\");\r\n              }\r\n            }\r\n    )\r\n  }else{\r\n    this.props.history.push('/login');\r\n  }\r\n}\r\nhandleChange = (selectedOption) => {\r\n  this.setState({ selectedOption: selectedOption });\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"header\">\r\n      {this.state.toShowLoader===true?<div className=\"loadingScreen\">\r\n      <Loader\r\n         type=\"Circles\"\r\n         color=\"#3578E5\"\r\n         height={100}\r\n         width={100}\r\n      />\r\n      </div>:\r\n      <div>\r\n        <div className=\"codingQuestion\">{this.state.codeStatement}</div>\r\n        <div className=\"codeDescription\">{this.state.codeDescription}</div>\r\n        <div className=\"codeInputType\">Constraints{this.state.codeInputFormat.map((i,key) => {\r\n            return <div key={key}>{i}</div>;\r\n        })}</div>\r\n        <div className=\"codeOutputType\">Input{this.state.example.map((i,key) => {\r\n            return <div key={key}>{i}</div>;\r\n        })}</div>\r\n        <div className=\"codeOutputType\">Expected Output{this.state.codeOutputFormat.map((i,key) => {\r\n            return <div key={key}>{i}</div>;\r\n        })}</div>\r\n        <Select\r\n            className=\"availableLanguage\"\r\n            onChange={this.handleChange}\r\n            options={this.state.oAvailableLanguage}\r\n            placeholder={this.state.placeHolder}\r\n        />\r\n        <div className=\"\"><textarea className=\"codeInput\" type=\"text\" placeholder=\"Type your code here\" onChange={this.updateCode}/></div>\r\n        <div className=\"buttonHolder\">\r\n        <div className=\"codeAnswerButton\" onClick={this.compileCode}>Compile</div>\r\n        <div className=\"codeAnswerButton\" onClick={this.submitCode}>Submit</div>\r\n        </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default Code;\r\n","import React from 'react';\r\nimport './Register.css';\r\nimport cookie from 'react-cookies';\r\nimport Puzzle from './Puzzle.js';\r\nimport Code from './Code.js';\r\n\r\nclass Question extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        code:'',\r\n        isPuzzleCode:true,\r\n        questionType:'',\r\n        questionNumber:'',\r\n        time: {}\r\n    };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.onEndTest = this.onEndTest.bind(this);\r\n    this.checkProgress = this.checkProgress.bind(this);\r\n    this.openTimer = this.openTimer.bind(this);\r\n    this.stopTimer = this.stopTimer.bind(this);\r\n}\r\nsecondsToTime(secs){\r\n  let hours = Math.floor(secs / (60 * 60));\r\n\r\n  let divisor_for_minutes = secs % (60 * 60);\r\n  let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n  let divisor_for_seconds = divisor_for_minutes % 60;\r\n  let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n  let obj = {\r\n    \"h\": hours,\r\n    \"m\": minutes,\r\n    \"s\": seconds\r\n  };\r\n  return obj;\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.checkProgress();\r\n  this.openTimer();\r\n}\r\n\r\nopenTimer(){\r\n  let timeLeftVar = this.secondsToTime(parseInt(cookie.load('challengeTime')));\r\n  this.setState({ time: timeLeftVar });\r\n  this.startTimer();\r\n}\r\n\r\nstartTimer() {\r\n  if (this.timer == 0 && parseInt(cookie.load('challengeTime')) > 0) {\r\n    this.timer = setInterval(this.countDown, 1000);\r\n  }\r\n}\r\n\r\nstopTimer(){\r\n  this.setState({timer:undefined});\r\n}\r\n\r\ncountDown() {\r\n  // Remove one second, set state so a re-render happens.\r\n  let seconds = parseInt(cookie.load('challengeTime')) - 1;\r\n  this.setState({\r\n    time: this.secondsToTime(seconds)\r\n  });\r\n  cookie.save('challengeTime', seconds.toString(), { path: '/' });\r\n  // Check if we're at zero.\r\n  if (seconds == 0) { \r\n    clearInterval(this.timer);\r\n    this.onEndTest();\r\n  }\r\n}\r\ncheckProgress(){\r\n  var teamName=cookie.load('teamName');\r\n  if(teamName!==null&&teamName!==undefined&&teamName!==\"\"){\r\n  fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/fetchProgress?key=SHARED_KEY\",{\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({\"teamName\":teamName})\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              if(result.status === \"Success\"){\r\n                if(result.questionNumber === \"6\"){\r\n                  this.onEndTest();\r\n                }\r\n                else{\r\n                  this.setState({questionType:result.questionType,questionNumber:result.questionNumber});\r\n                }\r\n              }else if(result.status === \"Fail\"){\r\n                  alert(\"Something went wrong\");\r\n              }\r\n            }\r\n    )\r\n  }else{\r\n    this.props.history.push('/login');\r\n  }\r\n}\r\n\r\nonEndTest(){\r\n  var teamName=cookie.load('teamName');\r\n  fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/finalSubmission?key=SHARED_KEY\",{\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({\"teamName\":teamName,\"completionTime\":cookie.load('challengeTime')})\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              if(result.status === \"Success\"){\r\n                this.props.history.lengt=-1;\r\n                cookie.remove('teamName');\r\n                this.props.history.push('/CompleteTestPage');\r\n              }else if(result.status === \"Fail\"){\r\n                  alert(\"Something went wrong\");\r\n              }\r\n            }\r\n    )\r\n}\r\n\r\n\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"\">\r\n        <div className=\"challengeHeader\">\r\n            <div className=\"challengeHeaderMessage\">Break the ENGIMA</div>\r\n            <div className=\"challengeTimer\">{this.state.time.h} : {this.state.time.m} : {this.state.time.s}</div>\r\n            <div className=\"endTestButton\" onClick={this.onEndTest}>End Test</div>\r\n        </div>\r\n        <div className=\"challengeBody\">\r\n            {this.state.questionType===\"P\"?\r\n            <Puzzle timer = {this.state.seconds} toggleQuestion={this.checkProgress}/>:this.state.questionType===\"C\"?\r\n            <Code timer = {this.state.seconds} toggleQuestion={this.checkProgress}/>:<div></div>}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default Question;\r\n","import React from 'react';\r\nimport './Register.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport cookie from 'react-cookies';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      teamName:'',\r\n      passCode:''\r\n    };\r\n    this.checkTeam = this.checkTeam.bind(this);\r\n    this.saveChallengeData = this.saveChallengeData.bind(this);\r\n    this.handleTeam = this.handleTeam.bind(this);\r\n    this.handlePassCode = this.handlePassCode.bind(this);\r\n}\r\n\r\nhandleTeam(event){\r\n    this.setState({teamName:event.target.value});\r\n}\r\n\r\nhandlePassCode(event){\r\n    this.setState({passCode:event.target.value});\r\n}\r\ncomponentDidMount(){\r\n  var temaName = cookie.load('teamName');\r\n  if(temaName!==null && temaName!==undefined && temaName !== \"\"){\r\n    this.props.history.push('/challenge');\r\n  }\r\n}\r\n\r\ncheckTeam(){\r\n    if(this.state.teamName.length>0&&this.state.passCode.length>0){\r\n        this.setState({toShowLoader:true});\r\n        fetch(\"https://codingplatformbackend.herokuapp.com/codingPlatform/login?key=SHARED_KEY\",{\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({\"teamName\":this.state.teamName,\"passCode\":this.state.passCode,\"status\":null})\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              if(result.status === \"Success\"){\r\n                this.saveChallengeData(result.teamName);\r\n              }else if(result.status === \"Fail\"){\r\n                this.setState({toShowLoader:false});\r\n                  alert(\"Wrong team name or passcode or already completed the test\");\r\n              }\r\n            }\r\n          )\r\n      }else if(this.state.teamName.length===0){\r\n        alert(\"Team name cannot be empty\");\r\n      }else if(this.state.passCode.length===0){\r\n        alert(\"Passcode cannot be empty\");\r\n      }\r\n}\r\n\r\nsaveChallengeData(challengeData){\r\n    cookie.save('teamName', challengeData, { path: '/' });\r\n    cookie.save('challengeTime', \"5400\", { path: '/' });\r\n    this.setState({toShowLoader:false});\r\n    this.props.history.push('/challenge');\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"header\">\r\n        <div className=\"headerBackground\">\r\n        <div className=\"heading\">Break the ENGIMA</div>\r\n        <div className=\"quote\">“Those who can imagine anything, can create the impossible.”\r\n            ― Alan Turing</div>\r\n        </div>\r\n        <div className=\"registerForm\">\r\n            <div className=\"teamName\">Team Name</div>\r\n            <div className=\"teamNameDiv\">\r\n              <input id=\"teamID\" placeholder=\"Enter team name\" type=\"text\" className=\"teamNameInput\" onChange={this.handleTeam}/>\r\n            </div>\r\n            <div className=\"teamName\">Team Passcode</div>\r\n            <div className=\"teamNameDiv\">\r\n              <input id=\"teampasscode\" placeholder=\"Enter passcode\" type=\"password\" className=\"teamNameInput\" onChange={this.handlePassCode}/>\r\n            </div>\r\n            <div className=\"submitDiv\"><div className=\"submitButton\" onClick={this.checkTeam}>Login</div></div>\r\n        </div>\r\n        {this.state.toShowLoader===true?<div className=\"loaderDiv\"><Loader\r\n         type=\"Circles\"\r\n         color=\"#3578E5\"\r\n         height={50}\r\n         width={50}\r\n         /></div>:<div></div>}\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default Login;\r\n","import React from 'react';\r\nimport './Register.css';\r\n\r\nclass CompleteTestPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"\">\r\n        <div className=\"imageHolder\"><img src=\"./green-tick.png\"/></div>\r\n        <div className=\"imageMessage\">Test Completed</div>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default CompleteTestPage;\r\n","import React from 'react';\r\nimport Register from './Register.js';\r\nimport Checkout from './Checkout.js';\r\nimport Question from './Question.js';\r\nimport Login from './Login.js';\r\nimport CompleteTestPage from './CompleteTestPage.js';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nclass App extends React.Component {\r\n\r\nrender() {\r\n  return (\r\n        <Router>\r\n        <div className=\"App\">\r\n        <Route path = \"/register\" component = {Register} />\r\n        <Route path = \"/checkout\" component = {Checkout} />\r\n        <Route path = \"/login\" component = {Login} />\r\n        <Route path = \"/challenge\" component = {Question} />\r\n        <Route path = \"/CompleteTestPage\" component = {CompleteTestPage} />\r\n        </div>\r\n        </Router>\r\n  );\r\n}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}